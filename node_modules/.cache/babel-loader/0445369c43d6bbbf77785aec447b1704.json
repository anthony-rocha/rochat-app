{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyrocha/Desktop/rocha-react-chat-app/src/App.js\";\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport moment from 'moment';\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport Home from './Home';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport Chatroom from './Chatroom';\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAL9ATZMFGjSy0QfuiMB2fJzm8tvw9itFw\",\n  authDomain: \"fir-chat-rocha.firebaseapp.com\",\n  projectId: \"fir-chat-rocha\",\n  storageBucket: \"fir-chat-rocha.appspot.com\",\n  messagingSenderId: \"462610716205\",\n  appId: \"1:462610716205:web:3ff5f9cc6602a039b4caa4\"\n});\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }))) // <div className=\"App\">\n  //   <header>\n  //     <h1>Rocha's Chat Room</h1>\n  //     <SignOut />\n  //   </header>\n  //     <section>\n  //       {user ? <ChatRoom /> : <SignIn />}\n  //     </section>\n  // </div>\n  ;\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sign-in\",\n    onClick: signInWithGoogle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Sign in with Google\", /*#__PURE__*/React.createElement(\"img\", {\n    className: \"google\",\n    src: \"https://emojis.slackmojis.com/emojis/images/1450464805/195/google.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  })));\n}\n\nfunction SignOut() {\n  return auth.currentUser && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sign-out\",\n    onClick: () => auth.signOut(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, \"Sign Out\");\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(100);\n  const [messages] = useCollectionData(query, {\n    idField: 'id'\n  });\n  const [formValue, setFormValue] = useState('');\n  console.log('CU', auth.currentUser);\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    const {\n      uid,\n      photoURL,\n      displayName\n    } = auth.currentUser;\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n      displayName\n    });\n    setFormValue('');\n    dummy.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, messages && messages.map(msg => /*#__PURE__*/React.createElement(ChatMessage, {\n    key: msg.id,\n    message: msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 40\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    ref: dummy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: formValue,\n    onChange: e => setFormValue(e.target.value),\n    placeholder: \"Type Your Message Here! \\uD83D\\uDE00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !formValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, \"Submit\")));\n}\n\nfunction ChatMessage(props) {\n  const {\n    text,\n    uid,\n    photoURL,\n    createdAt,\n    displayName\n  } = props.message;\n  console.log(props.message);\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: `message ${messageClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, displayName, /*#__PURE__*/React.createElement(\"img\", {\n    src: photoURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timestamp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, \" \", moment(createdAt).format('LT'), \" \")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/anthonyrocha/Desktop/rocha-react-chat-app/src/App.js"],"names":["React","useRef","useState","moment","Switch","Route","NavLink","Home","firebase","useAuthState","useCollectionData","Chatroom","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","App","user","SignIn","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","messagesRef","collection","query","orderBy","limit","messages","idField","formValue","setFormValue","console","log","sendMessage","e","preventDefault","uid","photoURL","displayName","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","id","target","value","ChatMessage","props","message","messageClass","format"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\nimport moment from 'moment';\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport Home from './Home';\n\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport Chatroom from './Chatroom';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAL9ATZMFGjSy0QfuiMB2fJzm8tvw9itFw\",\n  authDomain: \"fir-chat-rocha.firebaseapp.com\",\n  projectId: \"fir-chat-rocha\",\n  storageBucket: \"fir-chat-rocha.appspot.com\",\n  messagingSenderId: \"462610716205\",\n  appId: \"1:462610716205:web:3ff5f9cc6602a039b4caa4\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div>\n\n    <Route exact path=\"/\">\n      <Home />\n    </Route>\n    \n\n\n    </div>\n\n    // <div className=\"App\">\n    //   <header>\n    //     <h1>Rocha's Chat Room</h1>\n    //     <SignOut />\n    //   </header>\n    //     <section>\n    //       {user ? <ChatRoom /> : <SignIn />}\n    //     </section>\n    \n    // </div>\n   \n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google\n      <img className=\"google\" src=\"https://emojis.slackmojis.com/emojis/images/1450464805/195/google.png\" />\n      </button>\n    </>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(100);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n  console.log('CU', auth.currentUser);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL, displayName } = auth.currentUser;\n    \n    \n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL, \n      displayName\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n\n    </main>\n\n    <form onSubmit={sendMessage}>\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Type Your Message Here! 😀\" />\n\n      <button type=\"submit\" disabled={!formValue}>Submit</button>\n\n    </form>\n  </>)\n}\n\n\nfunction ChatMessage(props) {\n  \n  const { text, uid, photoURL, createdAt, displayName} = props.message;\n\n  console.log(props.message);\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n  \n\n\n  return (<>\n\n    <div className={`message ${messageClass}`}>\n      {displayName}\n      <img src={photoURL} />\n      <p>{text}</p>    \n      <div className=\"timestamp\"> {moment(createdAt).format('LT')} </div>\n      </div>\n  </>)\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}